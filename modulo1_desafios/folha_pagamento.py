"""
Nova implementa√ß√£o. 
‚óè Adicionar a vari√°vel nome do funcion√°rio 
‚óè Pesquisar sobre al√≠quota IR e INSS 
‚óè Implementar o c√°lculo do IR e do INSS 
‚óè Implementar as restri√ß√µes nos campos, estes n√£o podem estar vazios ou em branco. 
‚óè Criar as fun√ß√µes (cadastrar, excluir, alterar, listar) 
‚óè O programa deve funcionar tantas vezes quanto for necess√°rio. 

Sistema Folha de Pagamento 
‚óè O programa deve oferecer uma op√ß√£o para o usu√°rio listar todos os funcion√°rios cadastrados.
‚óè O programa deve disponibilizar uma op√ß√£o para o usu√°rio sair do Sistema. 
‚óè Ao final, exibir a mensagem: Programa finalizado com sucesso!!!
"""


# Sistema Folha de Pagamento

funcionarios = []  # lista para armazenar os funcion√°rios


def validar_campo(valor, nome_campo):
    if not valor.strip():
        raise ValueError(f"‚ö†Ô∏è O campo '{nome_campo}' n√£o pode estar vazio!")
    return valor


def calcular_inss(salario_bruto):
    if salario_bruto <= 1412.00:
        return salario_bruto * 0.075
    elif salario_bruto <= 2666.68:
        return salario_bruto * 0.09
    elif salario_bruto <= 4000.03:
        return salario_bruto * 0.12
    else:
        return salario_bruto * 0.14


def calcular_ir(salario_bruto):
    if salario_bruto <= 2259.20:
        return 0
    elif salario_bruto <= 2826.65:
        return salario_bruto * 0.075
    elif salario_bruto <= 3751.05:
        return salario_bruto * 0.15
    elif salario_bruto <= 4664.68:
        return salario_bruto * 0.225
    else:
        return salario_bruto * 0.275


def cadastrar_funcionario():
    try:
        nome = validar_campo(input("Digite o nome do funcion√°rio: "), "Nome")
        valor_hora = float(validar_campo(input("Digite o valor da hora (R$): "), "Valor da hora"))
        horas_trabalhadas = float(validar_campo(input("Digite a quantidade de horas trabalhadas: "), "Horas trabalhadas"))

        salario_bruto = valor_hora * horas_trabalhadas
        inss = calcular_inss(salario_bruto)
        ir = calcular_ir(salario_bruto)
        sindicato = salario_bruto * 0.05
        salario_liquido = salario_bruto - (inss + ir + sindicato)

        funcionario = {
            "nome": nome,
            "salario_bruto": salario_bruto,
            "inss": inss,
            "ir": ir,
            "sindicato": sindicato,
            "salario_liquido": salario_liquido
        }

        funcionarios.append(funcionario)
        print(f"\n‚úÖ Funcion√°rio {nome} cadastrado com sucesso!\n")

    except ValueError as e:
        print(e)


def listar_funcionarios():
    if not funcionarios:
        print("\n‚ö†Ô∏è Nenhum funcion√°rio cadastrado.\n")
        return

    for i, f in enumerate(funcionarios, 1):
        print(f"\n=== Funcion√°rio {i} - {f['nome']} ===")
        print(f"(+) Sal√°rio Bruto    : R$ {f['salario_bruto']:.2f}")
        print(f"(-) IR               : R$ {f['ir']:.2f}")
        print(f"(-) INSS             : R$ {f['inss']:.2f}")
        print(f"(-) Sindicato (5%)   : R$ {f['sindicato']:.2f}")
        print(f"(=) Sal√°rio L√≠quido  : R$ {f['salario_liquido']:.2f}")
        print("=" * 35)


def alterar_funcionario():
    listar_funcionarios()
    if not funcionarios:
        return

    try:
        indice = int(input("Digite o n√∫mero do funcion√°rio para alterar: ")) - 1
        if 0 <= indice < len(funcionarios):
            funcionarios.pop(indice)
            print("‚ö†Ô∏è Insira os novos dados do funcion√°rio:")
            cadastrar_funcionario()
        else:
            print("‚ö†Ô∏è Funcion√°rio n√£o encontrado.")
    except ValueError:
        print("‚ö†Ô∏è Entrada inv√°lida.")


def excluir_funcionario():
    listar_funcionarios()
    if not funcionarios:
        return

    try:
        indice = int(input("Digite o n√∫mero do funcion√°rio para excluir: ")) - 1
        if 0 <= indice < len(funcionarios):
            removido = funcionarios.pop(indice)
            print(f"\nüóëÔ∏è  Funcion√°rio: {removido['nome']} exclu√≠do com sucesso!\n")
        else:
            print("‚ö†Ô∏è Funcion√°rio n√£o encontrado.")
    except ValueError:
        print("‚ö†Ô∏è Entrada inv√°lida.")


# Programa principal
while True:
    print("\n=== SISTEMA FOLHA DE PAGAMENTO ===")
    print("1 - Cadastrar funcion√°rio")
    print("2 - Alterar funcion√°rio")
    print("3 - Excluir funcion√°rio")
    print("4 - Listar funcion√°rios")
    print("5 - Sair")
    opcao = input("Digite sua op√ß√£o: ")

    if opcao == "1":
        cadastrar_funcionario()
    elif opcao == "2":
        alterar_funcionario()
    elif opcao == "3":
        excluir_funcionario()
    elif opcao == "4":
        listar_funcionarios()
    elif opcao == "5":
        print("\n‚úÖ Programa finalizado com sucesso!!!\n")
        break
    else:
        print("‚ö†Ô∏è Op√ß√£o inv√°lida, tente novamente!")
